package oracle.bpm.workspace.client.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import oracle.bpm.workspace.client.config.SOAServiceClient;
import oracle.bpm.workspace.client.service.CustomSOAService;
import oracle.soa.management.facade.ComponentInstance;
import oracle.soa.management.facade.Locator;

@Controller
public class CustomSOAController {
	@Resource(name = "soaClient")
	protected SOAServiceClient soaClient;
	
	@Resource(name="CustomSOAService")
	protected CustomSOAService customSOAService;
	
	private Logger logger = LoggerFactory.getLogger(this.getClass()); // Logger

	@RequestMapping("/soa/component/instances")
	public String componentInstances(HttpSession session, @RequestParam(required = false) Map<String, String> params,
			ModelMap model) throws Exception {
		
		Locator locator = soaClient.getLocator();
		List<ComponentInstance> componentInstances = customSOAService.getComponentInstances(locator, params);
		
		model.addAttribute("result", componentInstances);

		return "bpm/home/subs/componentInstances";
	}
}
