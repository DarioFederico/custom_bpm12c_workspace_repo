package oracle.bpm.workspace.client.web;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import oracle.bpel.services.workflow.verification.IWorkflowContext;
import oracle.bpm.workspace.client.config.SOAServiceClient;
import oracle.bpm.workspace.client.service.CustomWorkflowService;
import oracle.bpm.workspace.client.vo.TaskVO;

@Controller
public class CustomWorkflowController {
	@Resource(name = "soaClient")
	protected SOAServiceClient soaClient;
	
	@Resource(name="CustomWorkflowService")
	protected CustomWorkflowService customWorkflowService;
	
	private Logger logger = LoggerFactory.getLogger(this.getClass()); // Logger

	@RequestMapping("/bpm/workflow/tasks")
	public String tasks(HttpSession session, @RequestParam(required = false) Map<String, String> params,
			ModelMap model) throws Exception {
		
		HashMap<String, Object> accountData = (HashMap<String, Object>) session.getAttribute("accountData");
		
		IWorkflowContext wfCtx = null;
		
		wfCtx = (IWorkflowContext) accountData.get("workflowContext");
		
		//Map<String, Object> userPrefs = (Map<String, Object>)accountData.get("bpm_user_preferences");
		//logger.debug("usrPrfmaxPageRows : "+userPrefs.get("usrPrfmaxPageRows"));
		
		List<TaskVO> tasks = customWorkflowService.getTaskList(wfCtx, params);
		
		logger.debug("###### task count : "+tasks.size());
		
		//String result = JsonUtility.getToJSONString(tasks);
		//logger.debug("##### task Json Str : "+ result);
		//List<TaskVO> fromJsonTasks = (List<TaskVO>) JsonUtility.getFromJSONString(result);
		
		model.addAttribute("params", params);
		model.addAttribute("result", tasks);
		
		model.addAttribute("result", null);

		return "bpm/home/subs/tasks";
	}
	
	@RequestMapping("/bpm/workflow/taskDetail")
	public String taskDetail(HttpSession session, @RequestParam(required = false) Map<String, String> params,
			ModelMap model) throws Exception {

		model.addAttribute("result", null);

		return "bpm/home/subs/taskDetail";
	}
	
	@RequestMapping("/bpm/workflow/doAction")
	public String doAction(HttpSession session, @RequestParam(required = false) Map<String, String> params,
			ModelMap model) throws Exception {

		model.addAttribute("result", null);

		return "bpm/home/subs/processInstances";
	}
}
